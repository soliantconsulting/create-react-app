import react from "@vitejs/plugin-react-swc";
import { visualizer } from "rollup-plugin-visualizer";
import { defineConfig } from "vite";
import favicons from "vite-plugin-hashed-favicons";
import tsconfigPaths from "vite-tsconfig-paths";
import TanStackRouterVite from "@tanstack/router-plugin/vite";

export default defineConfig({
    plugins: [
        TanStackRouterVite({
            target: "react",
            autoCodeSplitting: true,
            routeFileIgnorePrefix: "-",
            quoteStyle: "double",
            semicolons: true,
            customScaffolding: {
                routeTemplate: [
                    '%%tsrImports%%',
                    'import type { ReactNode } from "react";\n\n',
                    'const Root = (): ReactNode => "Hello %%tsrPath%%!";\n\n',
                    '%%tsrExportStart%%{\n component: Root\n }%%tsrExportEnd%%'
                ].join("\n"),
            },
        }),
        react(),
        tsconfigPaths(),
        visualizer(),
        favicons("./src/assets/favicon.svg"),
    ],
    build: {
        sourcemap: true,
        rollupOptions: {
            output: {
                manualChunks: {
                    react: ["react", "react-dom", "@tanstack/react-router", "react-confirm-hook"],
                    mui: [
                        "@mui/material",
                        "@mui/icons-material",
                        "material-ui-popup-state",
                        "@emotion/react",
                        "@emotion/styled",
                    ],
                    notistack: ["notistack"],
                    query: ["@tanstack/react-query", "@jsonapi-serde/client"],
                    form: ["react-hook-form", "@hookform/resolvers", "mui-rhf-integration"],
                    temporal: ["temporal-polyfill"],
                    zod: ["zod", "zod-temporal"],
                    {%- if features contains "auth0" %}
                    auth: ["@auth0/auth0-react"],
                    {%- endif %}
                },
            },
            // @see https://github.com/vitejs/vite/issues/15012
            onwarn(warning, defaultHandler) {
                if (warning.code === 'SOURCEMAP_ERROR') {
                    return;
                }

                defaultHandler(warning)
            },
        },
    },
    server: {
        port: 3010,
    },
});
